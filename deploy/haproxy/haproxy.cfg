global
	log /dev/log	local0
	log /dev/log	local1 notice
	maxconn 4096
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	#ca-base /etc/ssl/certs
	#crt-base /etc/ssl/private
	tune.ssl.default-dh-param 4096
	ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
#	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option	http-server-close
	option 	redispatch
	option 	forwardfor
    timeout connect 10s
    timeout client  60s
	timeout client-fin 60s
	timeout http-keep-alive 60s
	timeout http-request 10s
	timeout queue	1m
    timeout server  60s
	timeout tunnel	1h
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend unsecured
	bind :80
	option	http-pretend-keepalive
	redirect scheme https code 301 if !{ ssl_fc }

frontend secured
	bind :443 ssl crt /etc/ssl/comsesnet.pem
	redirect prefix https://www.comses.net code 301 if { hdr(host) -i comses.net }
	redirect prefix https://www.comses.net code 301 if { hdr(host) -i west.comses.net }
	redirect prefix https://www.comses.net code 301 if { hdr(host) -i core.comses.net }
	use_backend discourse if { ssl_fc_sni forum.comses.net }
	use_backend prodcms if { ssl_fc_sni www.comses.net }
	use_backend stagingcms if { ssl_fc_sni test.comses.net }
	use_backend nginx if { ssl_fc_sni miracle.comses.net }
	use_backend catalog if { ssl_fc_sni catalog-dev.comses.net }
	default_backend prodcms

backend catalog
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server catalog catalog:80 check

backend nginx
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server system-nginx 127.0.0.1:8888 check

backend prodcms
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server prodcms 127.0.0.1:8880 check

backend stagingcms
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server stagingcms staging:80 check

backend discourse
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request add-header X-Forwarded-Proto https if { ssl_fc }
	server discourse-nginx discourse:80 check

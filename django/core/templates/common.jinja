{% macro submit_model_btn() %}
<div class='submit-model'><a class='btn btn-primary w-100' href='{{ url("library:codebase-add") }}'>Submit a model</a></div>
{% endmacro %}

{% macro search_tag_href(tag, css_classes='tag', category=None) %}
<a class='{{ css_classes }}' href='/search?tag={{tag.name}}'>
    {{ tag.name }}
</a>
{% endmacro %}

{% macro search_tag_btn(tag, category=None) %}
{# FIXME: combination of CSS classes should be extracted into SCSS as a single convenience class #}
{{ search_tag_href(tag, 'btn btn-tag btn-outline-secondary', category) }}
{% endmacro %}

{% macro institution_href(institution) %}
{% if institution %}
    {% if institution.url %}
        <a href='{{ institution.url }}' target='_blank'>{{ institution.name }}</a>
    {% else %}
        {{ institution.name }}
    {% endif %}
{% endif %}
{% endmacro %}

{% macro member_profile_href(member_profile) %}
<a href='{{ member_profile.profile_url }}'>{{ member_profile.full_name }}</a>
{% endmacro %}

{% macro share_card(url) %}
{# FIXME: add detail_url to share links #}
<div class="card-metadata">
    <div class="card-block my-auto">
        <ul class='social-media-sm my-auto'>
            <li class='pr-2'><b>Share</b></li>
            <li>
                <a href='https://linkedin.com' title='LinkedIn' target='_blank'>
                    <span class='fa-stack'>
                        <i class='fa fa-circle fa-stack-2x'></i>
                        <i class='fa fa fa-linkedin fa-inverse fa-stack-1x'></i>
                    </span>
                </a>
            </li>
            <li>
                <a href='https://facebook.com' title='facebook' target='_blank'>
                    <span class='fa-stack'>
                        <i class='fa fa-circle fa-stack-2x'></i>
                        <i class='fa fa-facebook fa-inverse fa-stack-1x'></i>
                    </span>
                </a>
            </li>
            <li>
                <a href='https://twitter.com' title='Twitter' target='_blank'>
                    <span class='fa-stack'>
                        <i class='fa fa-circle fa-stack-2x'></i>
                        <i class='fa fa-twitter fa-inverse fa-stack-1x'></i>
                    </span>
                </a>
            </li>
            <li>
                <a href='#' title='Email'>
                    <span class='fa-stack'>
                        <i class='fa fa-circle fa-stack-2x'></i>
                        <i class='fa fa-envelope fa-inverse fa-stack-1x'></i>
                    </span>
                </a>
            </li>
        </ul>
    </div>
</div>
{% endmacro %}

{% macro paginator(url_name, list_state) %}
    <nav aria-label="Paginator">
        {% if list_state.count %}
            <ul class="pagination">
                {% for page in list_state.range %}
                    {% if loop.first and page != 1 %}
                        <li class="page-item{% if page == list_state.current_page %} active{% endif %}">
                            <a href="{{ url(url_name) }}?{{ list_state.query_params }}&page=1#query"
                               class="page-link">1</a>
                        </li>
                        <li class="page-item">
                            <span class="page-link">...</span>
                        </li>
                    {% endif %}
                    <li class="page-item{% if page == list_state.current_page %} active{% endif %}">
                        <a href="{{ url(url_name) }}?{{ list_state.query_params }}&page={{ page }}#query"
                           class="page-link">{{ page }}</a>
                    </li>
                    {% if loop.last and page != list_state.n_pages %}
                        <li class="page-item">
                            <span class="page-link">...</span>
                        </li>
                        <li class="page-item{% if page == list_state.current_page %} active{% endif %}">
                            <a href="{{ url(url_name) }}?{{ list_state.query_params }}&page={{ list_state.n_pages }}#query"
                               class="page-link">{{ list_state.n_pages }}</a>
                        </li>
                    {% endif %}
                {% endfor %}
            </ul>
        {% endif %}
        <span>{{ list_state.count }} results found.</span>
    </nav>
{% endmacro %}

{% macro list_page(list_state, item_component, detail_url_name) %}
    {% for item in list_state.results %}
        {{ item_component(item, detail_url_name) }}
    {% endfor %}
{% endmacro %}

{% macro subnav(items) %}
<ul class='nav nav-tabs justify-content-center'>
    {% for item in items %}
        <li class='nav-item'>
            <a class='nav-link {{ "active" if item.active else "" }}' href='{{ item.url }}'>{{ item.text }}</a>
        </li>
    {% endfor %}
</ul>
{% endmacro %}

{% macro breadcrumb(items) %}
<ol class="breadcrumb">
    <li class='breadcrumb-item'><a href='/'>Home</a></li>
    {% for item in items %}
        {% if loop.last %}
            <li class="breadcrumb-item active">{{ item.text }}</li>
        {% else %}
            <li class="breadcrumb-item"><a href="{{ item.url }}">{{ item.text }}</a></li>
        {% endif %}
    {% endfor %}
</ol>
{% endmacro %}

{% macro embed_discourse_comments(is_public) %}
    {# See https://meta.discourse.org/t/embedding-discourse-comments-via-javascript/31963 for details #}
    {% if should_enable_discourse(is_public) %}
    <script>
        DiscourseEmbed = {
            discourseUrl: "{{ DISCOURSE_BASE_URL }}/",
            discourseEmbedUrl: window.location.href
        };
        (function () {
            var d = document.createElement('script');
            d.type = 'text/javascript';
            d.async = true;
            d.src = DiscourseEmbed.discourseUrl + 'javascripts/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(d);
        })();
    </script>
    {% endif %}
{% endmacro %}
